services:
  backend:
    build:
      dockerfile: Backend.Dockerfile
    image: medusa-backend
    container_name: backend
    volumes:
      - "./medusa.sh:/app/medusa.sh"
    ports:
      - 9000:9000
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/${PG_MEDUSA_DB_NAME}
      STORE_CORS: ${STORE_CORS}
      REDIS_URL: redis://cache
      NODE_ENV: production
      JWT_SECRET: some_jwt_secret
      COOKIE_SECRET: some_cookie_secret
      PORT: 9000
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SENDGRID_FROM: ${SENDGRID_FROM}
      SENDGRID_ORDER_PLACED_ID: ${SENDGRID_ORDER_PLACED_ID}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PRIVATE_BUCKET: ${MINIO_PRIVATE_BUCKET}
      MINIO_PRIVATE_ACCESS_KEY: ${MINIO_PRIVATE_ACCESS_KEY}
      MINIO_PRIVATE_SECRET_KEY: ${MINIO_PRIVATE_SECRET_KEY}

  postgres:
    image: postgres:15.8
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${PG_MEDUSA_DB_NAME}

  redis:
    image: redis:7.4-alpine
    container_name: cache
    ports:
      - 6379:6379

  admin:
    build:
      dockerfile: Admin.Dockerfile
    image: medusa-admin
    container_name: medusa-admin
    ports:
      - 7001:9000
    depends_on:
      - backend
      - postgres
      - redis
      - minio
    environment:
      NODE_OPTIONS: --openssl-legacy-provider 
      REDIS_URL: redis://cache
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/${PG_MEDUSA_DB_NAME} # Not sure if this is needed for the Admin UI?
      GCS_CLIENT_EMAIL: ${GCS_CLIENT_EMAIL}
      GCS_SA_PRIVATE_KEY: ${GCS_SA_PRIVATE_KEY}
      GCS_PUBLIC_BUCKET_NAME: ${GCS_PUBLIC_BUCKET_NAME}
      GCS_BASE_PUBLIC_URL: https://storage.googleapis.com/${GCS_PUBLIC_BUCKET_NAME}/
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PRIVATE_BUCKET: ${MINIO_PRIVATE_BUCKET}
      MINIO_PRIVATE_ACCESS_KEY: ${MINIO_PRIVATE_ACCESS_KEY}
      MINIO_PRIVATE_SECRET_KEY: ${MINIO_PRIVATE_SECRET_KEY}

  minio:
    build:
      dockerfile: Minio.Dockerfile
    image: medusa-minio
    container_name: minio
    ports:
      - 10000:10000
      - 10001:10001
    volumes:
      - "./minio.config.json:/tmp/.mc/config.json"
      - "./minio.sh:/minio.sh"
    environment:
      MINIO_ROOT_USER: ${MINIO_PRIVATE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_PRIVATE_SECRET_KEY}

    
